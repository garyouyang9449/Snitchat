[{"/Users/garyouyang/Documents/Projects/Declair/client/src/index.js":"1","/Users/garyouyang/Documents/Projects/Declair/client/src/App.js":"2","/Users/garyouyang/Documents/Projects/Declair/client/src/components/Rooms/Rooms.js":"3","/Users/garyouyang/Documents/Projects/Declair/client/src/components/Chat/Chat.js":"4","/Users/garyouyang/Documents/Projects/Declair/client/src/components/InfoBar/InfoBar.js":"5","/Users/garyouyang/Documents/Projects/Declair/client/src/components/Input/Input.js":"6","/Users/garyouyang/Documents/Projects/Declair/client/src/components/Messages/Messages.js":"7","/Users/garyouyang/Documents/Projects/Declair/client/src/components/Message/Message.js":"8"},{"size":216,"mtime":1608582394581,"results":"9","hashOfConfig":"10"},{"size":496,"mtime":1608855442549,"results":"11","hashOfConfig":"10"},{"size":1043,"mtime":1609550294035,"results":"12","hashOfConfig":"10"},{"size":2071,"mtime":1609548410029,"results":"13","hashOfConfig":"10"},{"size":548,"mtime":1609303331690,"results":"14","hashOfConfig":"10"},{"size":554,"mtime":1609305233401,"results":"15","hashOfConfig":"10"},{"size":385,"mtime":1609550906998,"results":"16","hashOfConfig":"10"},{"size":962,"mtime":1609551071438,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qm2ggx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/garyouyang/Documents/Projects/Declair/client/src/index.js",[],["37","38"],"/Users/garyouyang/Documents/Projects/Declair/client/src/App.js",[],"/Users/garyouyang/Documents/Projects/Declair/client/src/components/Rooms/Rooms.js",["39","40","41"],"/*\nThis file is the Join page, where the users enter their and will be redirected to the topics page\n */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\n/**\n * Generate a random user name to support anonymity\n */\nconst RandomName = () => {\n\n}\n\n\n/**\n * The main structure of the web app. The root is the display of a list of rooms.\n */\nconst Rooms = () => {\n    const [school, setSchool] = useState(''); \n\n    // can not generate a existed name in the chat room\n    const name = \"User\" + Math.floor(Math.random() * 10);\n    // const name = \"User\" + Math.floor(Math.random());\n\n    return (\n        <div>\n            <Link to={`/chat?school=UCScamDiego&name=${name}`}>\n                <button className=\"button mt-20\" type=\"submit\">UC Scam Diego</button>\n            </Link>\n            <Link to={`/chat?school=UCShatterDreams&name=${name}`}>\n                <button className=\"button mt-20\" type=\"submit\">UC Shatter Dreams</button>\n            </Link>\n        </div>\n        \n    )\n}; \n\nexport default Rooms;","/Users/garyouyang/Documents/Projects/Declair/client/src/components/Chat/Chat.js",["42"],"import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar.js';\nimport Input from '../Input/Input.js';\nimport Messages from '../Messages/Messages';\n\nlet socket;\n\nconst ENDPOINT = 'localhost:5000';\nsocket = io(ENDPOINT);\n\n/**\n * The basic structure of the chatroom\n * @param {location} param0 the URL parameters\n */\nconst Chat = ({ location }) => {\n    const [school, setSchool] = useState(''); // set school to default ''\n    const [name, setName] = useState(''); \n    const [messages, setMessages] = useState([]); // an array of message\n    const [message, setMessage] = useState(''); // a single message\n\n    useEffect(() => {\n        const { school, name } = queryString.parse(location.search); // location.search: the url parameters\n\n        setSchool(school);\n        setName(name);\n\n        socket.emit('join', { school, name }, (error) => {\n            if(error) {\n                //regenerate a new name\n                \n            }\n        });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        };\n        \n    }, [ENDPOINT, location.search]); // on endpoint and URL location change\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message ]);\n        });\n    }, [messages]);\n\n    const sendMessage = (event) => {\n        // check if user types a empty message\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => {\n                setMessage('');\n            });\n        }\n    }\n\n    console.log(messages, message);\n\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar school={school}/>\n                <Messages messages={messages} name={name}/>\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n            </div>\n        </div>\n    )\n};\n\nexport default Chat;","/Users/garyouyang/Documents/Projects/Declair/client/src/components/InfoBar/InfoBar.js",[],"/Users/garyouyang/Documents/Projects/Declair/client/src/components/Input/Input.js",[],"/Users/garyouyang/Documents/Projects/Declair/client/src/components/Messages/Messages.js",[],"/Users/garyouyang/Documents/Projects/Declair/client/src/components/Message/Message.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":11,"column":7,"nodeType":"49","messageId":"50","endLine":11,"endColumn":17},{"ruleId":"47","severity":1,"message":"51","line":20,"column":12,"nodeType":"49","messageId":"50","endLine":20,"endColumn":18},{"ruleId":"47","severity":1,"message":"52","line":20,"column":20,"nodeType":"49","messageId":"50","endLine":20,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":43,"column":8,"nodeType":"55","endLine":43,"endColumn":35,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'RandomName' is assigned a value but never used.","Identifier","unusedVar","'school' is assigned a value but never used.","'setSchool' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'ENDPOINT'. Either exclude it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [location.search]",{"range":"62","text":"63"},[1201,1228],"[location.search]"]